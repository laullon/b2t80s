package a2600

import (
	"image"
	"image/color"
	"math/bits"

	"github.com/laullon/b2t80s/emulator"
)

var palette []color.RGBA

type tia struct {
	data    []byte
	display *image.RGBA
	monitor emulator.Monitor
	h, v    int
	cpu     emulator.CPU
}

func (tia *tia) ReadPort(addr uint16) (byte, bool) { return tia.data[addr&0x7f], false }
func (tia *tia) WritePort(addr uint16, data byte) {
	switch addr {
	case 0x00: // (VSYNC
		if data&2 == 2 {
			tia.h = 0
			tia.v = 0
			tia.monitor.FrameDone()
		}
	case 0x02: // (WSYNC
		tia.cpu.Wait(true)
	default:
		tia.data[addr&0x7f] = data
	}
}

func (tia *tia) Tick() {
	for i := 0; i < 3; i++ {
		tia.h++
		if tia.h == 228 {
			tia.cpu.Wait(false)
			if (tia.v > 40) && (tia.v < 232) {
				tia.draw()
			}
			tia.h = 0
			tia.v++
			if tia.v == 226 {
				tia.v = 0
				tia.monitor.FrameDone()
			}
		}
	}
}

func (tia *tia) draw() {
	colors := []color.RGBA{
		palette[tia.data[0x09]&0xfe],
		palette[tia.data[0x08]&0xfe],
	}
	pixels := uint32(bits.Reverse8(tia.data[0x0d])) << 16
	pixels |= uint32(tia.data[0x0e]) << 8
	pixels |= uint32(tia.data[0x0f])
	m := tia.data[0x0a]&1 == 1
	for x := 0; x < 80; x++ {
		tia.display.SetRGBA(80-x, tia.v-40, colors[pixels&1])
		if m {
			tia.display.SetRGBA(80+x, tia.v-40, colors[pixels&1])
		} else {
			tia.display.SetRGBA(159-x, tia.v-40, colors[pixels&1])
		}
		if (x+1)%4 == 0 {
			pixels >>= 1
		}
	}
}

func init() {
	palette = make([]color.RGBA, 0x100)
	palette[0x00] = color.RGBA{0x00, 0x00, 0x00, 0xff}
	palette[0x02] = color.RGBA{0x1A, 0x1A, 0x1A, 0xff}
	palette[0x04] = color.RGBA{0x39, 0x39, 0x39, 0xff}
	palette[0x06] = color.RGBA{0x5B, 0x5B, 0x5B, 0xff}
	palette[0x08] = color.RGBA{0x7E, 0x7E, 0x7E, 0xff}
	palette[0x0A] = color.RGBA{0xA2, 0xA2, 0xA2, 0xff}
	palette[0x0C] = color.RGBA{0xC7, 0xC7, 0xC7, 0xff}
	palette[0x0E] = color.RGBA{0xED, 0xED, 0xED, 0xff}
	palette[0x10] = color.RGBA{0x19, 0x02, 0x00, 0xff}
	palette[0x12] = color.RGBA{0x3A, 0x1F, 0x00, 0xff}
	palette[0x14] = color.RGBA{0x5D, 0x41, 0x00, 0xff}
	palette[0x16] = color.RGBA{0x82, 0x64, 0x00, 0xff}
	palette[0x18] = color.RGBA{0xA7, 0x88, 0x00, 0xff}
	palette[0x1A] = color.RGBA{0xCC, 0xAD, 0x00, 0xff}
	palette[0x1C] = color.RGBA{0xF2, 0xD2, 0x19, 0xff}
	palette[0x1E] = color.RGBA{0xFE, 0xFA, 0x40, 0xff}
	palette[0x20] = color.RGBA{0x37, 0x00, 0x00, 0xff}
	palette[0x22] = color.RGBA{0x5E, 0x08, 0x00, 0xff}
	palette[0x24] = color.RGBA{0x83, 0x27, 0x00, 0xff}
	palette[0x26] = color.RGBA{0xA9, 0x49, 0x00, 0xff}
	palette[0x28] = color.RGBA{0xCF, 0x6C, 0x00, 0xff}
	palette[0x2A] = color.RGBA{0xF5, 0x8F, 0x17, 0xff}
	palette[0x2C] = color.RGBA{0xFE, 0xB4, 0x38, 0xff}
	palette[0x2E] = color.RGBA{0xFE, 0xDF, 0x6F, 0xff}
	palette[0x30] = color.RGBA{0x47, 0x00, 0x00, 0xff}
	palette[0x32] = color.RGBA{0x73, 0x00, 0x00, 0xff}
	palette[0x34] = color.RGBA{0x98, 0x13, 0x00, 0xff}
	palette[0x36] = color.RGBA{0xBE, 0x32, 0x16, 0xff}
	palette[0x38] = color.RGBA{0xE4, 0x53, 0x35, 0xff}
	palette[0x3A] = color.RGBA{0xFE, 0x76, 0x57, 0xff}
	palette[0x3C] = color.RGBA{0xFE, 0x9C, 0x81, 0xff}
	palette[0x3E] = color.RGBA{0xFE, 0xC6, 0xBB, 0xff}
	palette[0x40] = color.RGBA{0x44, 0x00, 0x08, 0xff}
	palette[0x42] = color.RGBA{0x6F, 0x00, 0x1F, 0xff}
	palette[0x44] = color.RGBA{0x96, 0x06, 0x40, 0xff}
	palette[0x46] = color.RGBA{0xBB, 0x24, 0x62, 0xff}
	palette[0x48] = color.RGBA{0xE1, 0x45, 0x85, 0xff}
	palette[0x4A] = color.RGBA{0xFE, 0x67, 0xAA, 0xff}
	palette[0x4C] = color.RGBA{0xFE, 0x8C, 0xD6, 0xff}
	palette[0x4E] = color.RGBA{0xFE, 0xB7, 0xF6, 0xff}
	palette[0x50] = color.RGBA{0x2D, 0x00, 0x4A, 0xff}
	palette[0x52] = color.RGBA{0x57, 0x00, 0x67, 0xff}
	palette[0x54] = color.RGBA{0x7D, 0x05, 0x8C, 0xff}
	palette[0x56] = color.RGBA{0xA1, 0x22, 0xB1, 0xff}
	palette[0x58] = color.RGBA{0xC7, 0x43, 0xD7, 0xff}
	palette[0x5A] = color.RGBA{0xED, 0x65, 0xFE, 0xff}
	palette[0x5C] = color.RGBA{0xFE, 0x8A, 0xF6, 0xff}
	palette[0x5E] = color.RGBA{0xFE, 0xB5, 0xF7, 0xff}
	palette[0x60] = color.RGBA{0x0D, 0x00, 0x82, 0xff}
	palette[0x62] = color.RGBA{0x33, 0x00, 0xA2, 0xff}
	palette[0x64] = color.RGBA{0x55, 0x0F, 0xC9, 0xff}
	palette[0x66] = color.RGBA{0x78, 0x2D, 0xF0, 0xff}
	palette[0x68] = color.RGBA{0x9C, 0x4E, 0xFE, 0xff}
	palette[0x6A] = color.RGBA{0xC3, 0x72, 0xFE, 0xff}
	palette[0x6C] = color.RGBA{0xEB, 0x98, 0xFE, 0xff}
	palette[0x6E] = color.RGBA{0xFE, 0xC0, 0xF9, 0xff}
	palette[0x70] = color.RGBA{0x00, 0x00, 0x91, 0xff}
	palette[0x72] = color.RGBA{0x0A, 0x05, 0xBD, 0xff}
	palette[0x74] = color.RGBA{0x28, 0x22, 0xE4, 0xff}
	palette[0x76] = color.RGBA{0x48, 0x42, 0xFE, 0xff}
	palette[0x78] = color.RGBA{0x6B, 0x64, 0xFE, 0xff}
	palette[0x7A] = color.RGBA{0x90, 0x8A, 0xFE, 0xff}
	palette[0x7C] = color.RGBA{0xB7, 0xB0, 0xFE, 0xff}
	palette[0x7E] = color.RGBA{0xDF, 0xD8, 0xFE, 0xff}
	palette[0x80] = color.RGBA{0x00, 0x00, 0x72, 0xff}
	palette[0x82] = color.RGBA{0x00, 0x1C, 0xAB, 0xff}
	palette[0x84] = color.RGBA{0x03, 0x3C, 0xD6, 0xff}
	palette[0x86] = color.RGBA{0x20, 0x5E, 0xFD, 0xff}
	palette[0x88] = color.RGBA{0x40, 0x81, 0xFE, 0xff}
	palette[0x8A] = color.RGBA{0x64, 0xA6, 0xFE, 0xff}
	palette[0x8C] = color.RGBA{0x89, 0xCE, 0xFE, 0xff}
	palette[0x8E] = color.RGBA{0xB0, 0xF6, 0xFE, 0xff}
	palette[0x90] = color.RGBA{0x00, 0x10, 0x3A, 0xff}
	palette[0x92] = color.RGBA{0x00, 0x31, 0x6E, 0xff}
	palette[0x94] = color.RGBA{0x00, 0x55, 0xA2, 0xff}
	palette[0x96] = color.RGBA{0x05, 0x79, 0xC8, 0xff}
	palette[0x98] = color.RGBA{0x23, 0x9D, 0xEE, 0xff}
	palette[0x9A] = color.RGBA{0x44, 0xC2, 0xFE, 0xff}
	palette[0x9C] = color.RGBA{0x68, 0xE9, 0xFE, 0xff}
	palette[0x9E] = color.RGBA{0x8F, 0xFE, 0xFE, 0xff}
	palette[0xA0] = color.RGBA{0x00, 0x1F, 0x02, 0xff}
	palette[0xA2] = color.RGBA{0x00, 0x43, 0x26, 0xff}
	palette[0xA4] = color.RGBA{0x00, 0x69, 0x57, 0xff}
	palette[0xA6] = color.RGBA{0x00, 0x8D, 0x7A, 0xff}
	palette[0xA8] = color.RGBA{0x1B, 0xB1, 0x9E, 0xff}
	palette[0xAA] = color.RGBA{0x3B, 0xD7, 0xC3, 0xff}
	palette[0xAC] = color.RGBA{0x5D, 0xFE, 0xE9, 0xff}
	palette[0xAE] = color.RGBA{0x86, 0xFE, 0xFE, 0xff}
	palette[0xB0] = color.RGBA{0x00, 0x24, 0x03, 0xff}
	palette[0xB2] = color.RGBA{0x00, 0x4A, 0x05, 0xff}
	palette[0xB4] = color.RGBA{0x00, 0x70, 0x0C, 0xff}
	palette[0xB6] = color.RGBA{0x09, 0x95, 0x2B, 0xff}
	palette[0xB8] = color.RGBA{0x28, 0xBA, 0x4C, 0xff}
	palette[0xBA] = color.RGBA{0x49, 0xE0, 0x6E, 0xff}
	palette[0xBC] = color.RGBA{0x6C, 0xFE, 0x92, 0xff}
	palette[0xBE] = color.RGBA{0x97, 0xFE, 0xB5, 0xff}
	palette[0xC0] = color.RGBA{0x00, 0x21, 0x02, 0xff}
	palette[0xC2] = color.RGBA{0x00, 0x46, 0x04, 0xff}
	palette[0xC4] = color.RGBA{0x08, 0x6B, 0x00, 0xff}
	palette[0xC6] = color.RGBA{0x28, 0x90, 0x00, 0xff}
	palette[0xC8] = color.RGBA{0x49, 0xB5, 0x09, 0xff}
	palette[0xCA] = color.RGBA{0x6B, 0xDB, 0x28, 0xff}
	palette[0xCC] = color.RGBA{0x8F, 0xFE, 0x49, 0xff}
	palette[0xCE] = color.RGBA{0xBB, 0xFE, 0x69, 0xff}
	palette[0xD0] = color.RGBA{0x00, 0x15, 0x01, 0xff}
	palette[0xD2] = color.RGBA{0x10, 0x36, 0x00, 0xff}
	palette[0xD4] = color.RGBA{0x30, 0x59, 0x00, 0xff}
	palette[0xD6] = color.RGBA{0x53, 0x7E, 0x00, 0xff}
	palette[0xD8] = color.RGBA{0x76, 0xA3, 0x00, 0xff}
	palette[0xDA] = color.RGBA{0x9A, 0xC8, 0x00, 0xff}
	palette[0xDC] = color.RGBA{0xBF, 0xEE, 0x1E, 0xff}
	palette[0xDE] = color.RGBA{0xE8, 0xFE, 0x3E, 0xff}
	palette[0xE0] = color.RGBA{0x1A, 0x02, 0x00, 0xff}
	palette[0xE2] = color.RGBA{0x3B, 0x1F, 0x00, 0xff}
	palette[0xE4] = color.RGBA{0x5E, 0x41, 0x00, 0xff}
	palette[0xE6] = color.RGBA{0x83, 0x64, 0x00, 0xff}
	palette[0xE8] = color.RGBA{0xA8, 0x88, 0x00, 0xff}
	palette[0xEA] = color.RGBA{0xCE, 0xAD, 0x00, 0xff}
	palette[0xEC] = color.RGBA{0xF4, 0xD2, 0x18, 0xff}
	palette[0xEE] = color.RGBA{0xFE, 0xFA, 0x40, 0xff}
	palette[0xF0] = color.RGBA{0x38, 0x00, 0x00, 0xff}
	palette[0xF2] = color.RGBA{0x5F, 0x08, 0x00, 0xff}
	palette[0xF4] = color.RGBA{0x84, 0x27, 0x00, 0xff}
	palette[0xF6] = color.RGBA{0xAA, 0x49, 0x00, 0xff}
	palette[0xF8] = color.RGBA{0xD0, 0x6B, 0x00, 0xff}
	palette[0xFA] = color.RGBA{0xF6, 0x8F, 0x18, 0xff}
	palette[0xFC] = color.RGBA{0xFE, 0xB4, 0x39, 0xff}
	palette[0xFE] = color.RGBA{0xFE, 0xDF, 0x70, 0xff}
}
